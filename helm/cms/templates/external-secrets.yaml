{{- if .Values.externalSecrets }}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ include "cms.externalSecretsName" . }}

spec:

  # SecretStoreRef defines which SecretStore to use when fetching the secret data
  secretStoreRef:
    kind: ClusterSecretStore
    name: gcp-backend

  # RefreshInterval is the amount of the time before the values reading again from the SecretStore provider
  # Valid time units are "ns", "us", "ms", "s", "m", "h" (from time.ParseDuration)
  # May be set to zero to fetch and create it once
  refreshInterval: "1h"

  # the target describes the secret that shall be created
  # there can only be on target per ExternalSecret
  target:

    # The secret name of the resource
    # Defaults to .metadata.name of the ExternalSecret
    # It is immutable
    name: {{ include "cms.secretsName" . }}

    # Enum with values: 'Owner', 'Merge', or 'None'
    # Default value of 'Owner'
    # Owner creates the secret and sets .metadata.ownerReferences of the resource
    # Merge does not create the secret, but merges in the data fields to the secret
    # None does not create a secret (future use with injector)
    creationPolicy: Owner

  # Data defines the connection between the k8s Secret keys and the Provider data
  data:
    - secretKey: redis-truststore.jks
      remoteRef:
        key: {{ .Values.externalSecrets.gcp.redisCertKey }} # name of the gcp secret manager secret

  # Used to fetch all properties from the Provider key
  # If multiple dataFrom are specified, secrets are merged in the specified order
  dataFrom:
    - extract:
        key: {{ .Values.externalSecrets.gcp.applicationSecretKey }}
{{- end}}